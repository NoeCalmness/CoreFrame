/****************************************************************************************************
 * Copyright (C) 2017-2019 FengYunChuanShuo
 * 
 * Autogenerated game type infos.
 * Note any custom modification on this file will lose when script recompiled.
 * 
 * Author:   Y.Moon <chglove@live.cn>
 * Version:  0.6
 * Created:  2019-05-08
 * 
 ***************************************************************************************************/

public static partial class Game
{
    /// <summary>
    /// Register all window and module classes.
    /// </summary>
    private static void RegisterTypes()
    {
        m_types.Clear();
        m_typeNames.Clear();
        m_types.Add("window_active", typeof(Window_Active));
        m_types.Add("window_alert", typeof(Window_Alert));
        m_types.Add("window_announcement", typeof(Window_Announcement));
        m_types.Add("window_answerOption", typeof(Window_AnswerOption));
        m_types.Add("window_applyFriend", typeof(Window_ApplyFriend));
        m_types.Add("window_assist", typeof(Window_Assist));
        m_types.Add("window_attribute", typeof(Window_Attribute));
        m_types.Add("window_awake", typeof(Window_Awake));
        m_types.Add("window_awakeinit", typeof(Window_Awakeinit));
        m_types.Add("window_awaketeam", typeof(Window_Awaketeam));
        m_types.Add("window_bordlands", typeof(Window_Bordlands));
        m_types.Add("window_bordrank", typeof(Window_Bordrank));
        m_types.Add("window_cangku", typeof(Window_Cangku));
        m_types.Add("window_charge", typeof(Window_Charge));
        m_types.Add("window_chase", typeof(Window_Chase));
        m_types.Add("window_chat", typeof(Window_Chat));
        m_types.Add("window_collection", typeof(Window_Collection));
        m_types.Add("window_combat", typeof(Window_Combat));
        m_types.Add("window_countdown", typeof(Window_Countdown));
        m_types.Add("window_createRoom", typeof(Window_CreateRoom));
        m_types.Add("window_datingSelectNpc", typeof(Window_DatingSelectNpc));
        m_types.Add("window_debug", typeof(Window_Debug));
        m_types.Add("window_defaultLoading", typeof(Window_DefaultLoading));
        m_types.Add("window_equip", typeof(Window_Equip));
        m_types.Add("window_equipinfo", typeof(Window_Equipinfo));
        m_types.Add("window_evolution", typeof(Window_Evolution));
        m_types.Add("window_exchange", typeof(Window_Exchange));
        m_types.Add("window_exchangeshop", typeof(Window_Exchangeshop));
        m_types.Add("window_forging", typeof(Window_Forging));
        m_types.Add("window_friend", typeof(Window_Friend));
        m_types.Add("window_gift", typeof(Window_Gift));
        m_types.Add("window_giftDating", typeof(Window_GiftDating));
        m_types.Add("window_global", typeof(Window_Global));
        m_types.Add("window_gm", typeof(Window_Gm));
        m_types.Add("window_goodFeeling", typeof(Window_GoodFeeling));
        m_types.Add("window_home", typeof(Window_Home));
        m_types.Add("window_hpSlider", typeof(Window_HpSlider));
        m_types.Add("window_interlude", typeof(Window_Interlude));
        m_types.Add("window_itemTip", typeof(Window_ItemTip));
        m_types.Add("window_labyrinth", typeof(Window_Labyrinth));
        m_types.Add("window_liulangshangdian", typeof(Window_Liulangshangdian));
        m_types.Add("window_login", typeof(Window_Login));
        m_types.Add("window_mailbox", typeof(Window_Mailbox));
        m_types.Add("window_merge", typeof(Window_Merge));
        m_types.Add("window_name", typeof(Window_Name));
        m_types.Add("window_npcGaiden", typeof(Window_NpcGaiden));
        m_types.Add("window_npcRelationShip", typeof(Window_NpcRelationShip));
        m_types.Add("window_npcUpLv", typeof(Window_NpcUpLv));
        m_types.Add("window_profession", typeof(Window_Profession));
        m_types.Add("window_pveCombat", typeof(Window_PVECombat));
        m_types.Add("window_pvp", typeof(Window_PVP));
        m_types.Add("window_randomReward", typeof(Window_RandomReward));
        m_types.Add("window_resetTimes", typeof(Window_ResetTimes));
        m_types.Add("window_runeEquip", typeof(Window_RuneEquip));
        m_types.Add("window_runeMain", typeof(Window_RuneMain));
        m_types.Add("window_runeStart", typeof(Window_RuneStart));
        m_types.Add("window_selectRole", typeof(Window_SelectRole));
        m_types.Add("window_settings", typeof(Window_Settings));
        m_types.Add("window_settlement", typeof(Window_Settlement));
        m_types.Add("window_sex", typeof(Window_Sex));
        m_types.Add("window_shizhuangdian", typeof(Window_Shizhuangdian));
        m_types.Add("window_skill", typeof(Window_Skill));
        m_types.Add("window_soul", typeof(Window_Soul));
        m_types.Add("window_sprite", typeof(Window_Sprite));
        m_types.Add("window_strength", typeof(Window_Strength));
        m_types.Add("window_sublimation", typeof(Window_Sublimation));
        m_types.Add("window_summon", typeof(Window_Summon));
        m_types.Add("window_system", typeof(Window_System));
        m_types.Add("window_teamMatch", typeof(Window_TeamMatch));
        m_types.Add("window_train", typeof(Window_Train));
        m_types.Add("window_ultimateMask", typeof(Window_UltimateMask));
        m_types.Add("window_union", typeof(Window_Union));
        m_types.Add("window_unionboss", typeof(Window_Unionboss));
        m_types.Add("window_unionreward", typeof(Window_Unionreward));
        m_types.Add("window_unionsign", typeof(Window_Unionsign));
        m_types.Add("window_upload", typeof(Window_Upload));
        m_types.Add("window_welfare", typeof(Window_Welfare));
        m_types.Add("window_wish", typeof(Window_Wish));
        m_types.Add("window_factionBattle", typeof(Window_FactionBattle));
        m_types.Add("window_factionSettlement", typeof(Window_FactionSettlement));
        m_types.Add("window_factionSign", typeof(Window_FactionSign));
        m_types.Add("window_factionStart", typeof(Window_FactionStart));
        m_types.Add("window_datingDialogueReview", typeof(Window_DatingDialogueReview));
        m_types.Add("window_datingeffect", typeof(Window_Datingeffect));
        m_types.Add("window_datingGift", typeof(Window_DatingGift));
        m_types.Add("window_datingRestaurant", typeof(Window_DatingRestaurant));
        m_types.Add("window_datingSceneDivinationHouse", typeof(Window_DatingSceneDivinationHouse));
        m_types.Add("window_npcDating", typeof(Window_NPCDating));
        m_types.Add("window_npcDatingSettlement", typeof(Window_NPCDatingSettlement));
        m_types.Add("level", typeof(Level));
        m_types.Add("level_3dClick", typeof(Level_3DClick));
        m_types.Add("level_battle", typeof(Level_Battle));
        m_types.Add("level_bordlands", typeof(Level_Bordlands));
        m_types.Add("level_factionpvp", typeof(Level_FactionPVP));
        m_types.Add("level_home", typeof(Level_Home));
        m_types.Add("level_labyrinth", typeof(Level_Labyrinth));
        m_types.Add("level_login", typeof(Level_Login));
        m_types.Add("level_npcDating", typeof(Level_NpcDating));
        m_types.Add("level_pve", typeof(Level_PVE));
        m_types.Add("level_pveTeam", typeof(Level_PveTeam));
        m_types.Add("level_pveUnionBoss", typeof(Level_PveUnionBoss));
        m_types.Add("level_pvp", typeof(Level_PVP));
        m_types.Add("level_role", typeof(Level_role));
        m_types.Add("level_sneak", typeof(Level_Sneak));
        m_types.Add("level_test", typeof(Level_Test));
        m_types.Add("level_train", typeof(Level_Train));
        m_types.Add("session", typeof(Session));
        m_types.Add("module_active", typeof(Module_Active));
        m_types.Add("module_ai", typeof(Module_AI));
        m_types.Add("module_announcement", typeof(Module_Announcement));
        m_types.Add("module_answerOption", typeof(Module_AnswerOption));
        m_types.Add("module_assist", typeof(Module_Assist));
        m_types.Add("module_attribute", typeof(Module_Attribute));
        m_types.Add("module_avatar", typeof(Module_Avatar));
        m_types.Add("module_awake", typeof(Module_Awake));
        m_types.Add("module_awakeMatch", typeof(Module_AwakeMatch));
        m_types.Add("module_battle", typeof(Module_Battle));
        m_types.Add("module_bordlands", typeof(Module_Bordlands));
        m_types.Add("module_cangku", typeof(Module_Cangku));
        m_types.Add("module_charge", typeof(Module_Charge));
        m_types.Add("module_chase", typeof(Module_Chase));
        m_types.Add("module_chat", typeof(Module_Chat));
        m_types.Add("module_collection", typeof(Module_Collection));
        m_types.Add("module_datingGift", typeof(Module_DatingGift));
        m_types.Add("module_equip", typeof(Module_Equip));
        m_types.Add("module_factionBattle", typeof(Module_FactionBattle));
        m_types.Add("module_forging", typeof(Module_Forging));
        m_types.Add("module_friend", typeof(Module_Friend));
        m_types.Add("module_furnace", typeof(Module_Furnace));
        m_types.Add("module_gameGuard", typeof(Module_GameGuard));
        m_types.Add("module_gift", typeof(Module_Gift));
        m_types.Add("module_giftDating", typeof(Module_GiftDating));
        m_types.Add("module_global", typeof(Module_Global));
        m_types.Add("module_gm", typeof(Module_Gm));
        m_types.Add("module_guide", typeof(Module_Guide));
        m_types.Add("module_home", typeof(Module_Home));
        m_types.Add("module_labyrinth", typeof(Module_Labyrinth));
        m_types.Add("module_loading", typeof(Module_Loading));
        m_types.Add("module_login", typeof(Module_Login));
        m_types.Add("module_mailbox", typeof(Module_Mailbox));
        m_types.Add("module_match", typeof(Module_Match));
        m_types.Add("module_notice", typeof(Module_Notice));
        m_types.Add("module_npc", typeof(Module_Npc));
        m_types.Add("module_npcDating", typeof(Module_NPCDating));
        m_types.Add("module_npcDatingSettlement", typeof(Module_NPCDatingSettlement));
        m_types.Add("module_npcGaiden", typeof(Module_NpcGaiden));
        m_types.Add("module_pet", typeof(Module_Pet));
        m_types.Add("module_player", typeof(Module_Player));
        m_types.Add("module_pve", typeof(Module_PVE));
        m_types.Add("module_pveEvent", typeof(Module_PVEEvent));
        m_types.Add("module_pvp", typeof(Module_PVP));
        m_types.Add("module_rune", typeof(Module_Rune));
        m_types.Add("module_selectRole", typeof(Module_SelectRole));
        m_types.Add("module_set", typeof(Module_Set));
        m_types.Add("module_shop", typeof(Module_Shop));
        m_types.Add("module_skill", typeof(Module_Skill));
        m_types.Add("module_story", typeof(Module_Story));
        m_types.Add("module_task", typeof(Module_Task));
        m_types.Add("module_team", typeof(Module_Team));
        m_types.Add("module_union", typeof(Module_Union));
        m_types.Add("module_welfare", typeof(Module_Welfare));
        m_types.Add("module_wish", typeof(Module_Wish));
        m_typeNames.Add(typeof(Window_Active).GetHashCode(), "window_active");
        m_typeNames.Add(typeof(Window_Alert).GetHashCode(), "window_alert");
        m_typeNames.Add(typeof(Window_Announcement).GetHashCode(), "window_announcement");
        m_typeNames.Add(typeof(Window_AnswerOption).GetHashCode(), "window_answerOption");
        m_typeNames.Add(typeof(Window_ApplyFriend).GetHashCode(), "window_applyFriend");
        m_typeNames.Add(typeof(Window_Assist).GetHashCode(), "window_assist");
        m_typeNames.Add(typeof(Window_Attribute).GetHashCode(), "window_attribute");
        m_typeNames.Add(typeof(Window_Awake).GetHashCode(), "window_awake");
        m_typeNames.Add(typeof(Window_Awakeinit).GetHashCode(), "window_awakeinit");
        m_typeNames.Add(typeof(Window_Awaketeam).GetHashCode(), "window_awaketeam");
        m_typeNames.Add(typeof(Window_Bordlands).GetHashCode(), "window_bordlands");
        m_typeNames.Add(typeof(Window_Bordrank).GetHashCode(), "window_bordrank");
        m_typeNames.Add(typeof(Window_Cangku).GetHashCode(), "window_cangku");
        m_typeNames.Add(typeof(Window_Charge).GetHashCode(), "window_charge");
        m_typeNames.Add(typeof(Window_Chase).GetHashCode(), "window_chase");
        m_typeNames.Add(typeof(Window_Chat).GetHashCode(), "window_chat");
        m_typeNames.Add(typeof(Window_Collection).GetHashCode(), "window_collection");
        m_typeNames.Add(typeof(Window_Combat).GetHashCode(), "window_combat");
        m_typeNames.Add(typeof(Window_Countdown).GetHashCode(), "window_countdown");
        m_typeNames.Add(typeof(Window_CreateRoom).GetHashCode(), "window_createRoom");
        m_typeNames.Add(typeof(Window_DatingSelectNpc).GetHashCode(), "window_datingSelectNpc");
        m_typeNames.Add(typeof(Window_Debug).GetHashCode(), "window_debug");
        m_typeNames.Add(typeof(Window_DefaultLoading).GetHashCode(), "window_defaultLoading");
        m_typeNames.Add(typeof(Window_Equip).GetHashCode(), "window_equip");
        m_typeNames.Add(typeof(Window_Equipinfo).GetHashCode(), "window_equipinfo");
        m_typeNames.Add(typeof(Window_Evolution).GetHashCode(), "window_evolution");
        m_typeNames.Add(typeof(Window_Exchange).GetHashCode(), "window_exchange");
        m_typeNames.Add(typeof(Window_Exchangeshop).GetHashCode(), "window_exchangeshop");
        m_typeNames.Add(typeof(Window_Forging).GetHashCode(), "window_forging");
        m_typeNames.Add(typeof(Window_Friend).GetHashCode(), "window_friend");
        m_typeNames.Add(typeof(Window_Gift).GetHashCode(), "window_gift");
        m_typeNames.Add(typeof(Window_GiftDating).GetHashCode(), "window_giftDating");
        m_typeNames.Add(typeof(Window_Global).GetHashCode(), "window_global");
        m_typeNames.Add(typeof(Window_Gm).GetHashCode(), "window_gm");
        m_typeNames.Add(typeof(Window_GoodFeeling).GetHashCode(), "window_goodFeeling");
        m_typeNames.Add(typeof(Window_Home).GetHashCode(), "window_home");
        m_typeNames.Add(typeof(Window_HpSlider).GetHashCode(), "window_hpSlider");
        m_typeNames.Add(typeof(Window_Interlude).GetHashCode(), "window_interlude");
        m_typeNames.Add(typeof(Window_ItemTip).GetHashCode(), "window_itemTip");
        m_typeNames.Add(typeof(Window_Labyrinth).GetHashCode(), "window_labyrinth");
        m_typeNames.Add(typeof(Window_Liulangshangdian).GetHashCode(), "window_liulangshangdian");
        m_typeNames.Add(typeof(Window_Login).GetHashCode(), "window_login");
        m_typeNames.Add(typeof(Window_Mailbox).GetHashCode(), "window_mailbox");
        m_typeNames.Add(typeof(Window_Merge).GetHashCode(), "window_merge");
        m_typeNames.Add(typeof(Window_Name).GetHashCode(), "window_name");
        m_typeNames.Add(typeof(Window_NpcGaiden).GetHashCode(), "window_npcGaiden");
        m_typeNames.Add(typeof(Window_NpcRelationShip).GetHashCode(), "window_npcRelationShip");
        m_typeNames.Add(typeof(Window_NpcUpLv).GetHashCode(), "window_npcUpLv");
        m_typeNames.Add(typeof(Window_Profession).GetHashCode(), "window_profession");
        m_typeNames.Add(typeof(Window_PVECombat).GetHashCode(), "window_pveCombat");
        m_typeNames.Add(typeof(Window_PVP).GetHashCode(), "window_pvp");
        m_typeNames.Add(typeof(Window_RandomReward).GetHashCode(), "window_randomReward");
        m_typeNames.Add(typeof(Window_ResetTimes).GetHashCode(), "window_resetTimes");
        m_typeNames.Add(typeof(Window_RuneEquip).GetHashCode(), "window_runeEquip");
        m_typeNames.Add(typeof(Window_RuneMain).GetHashCode(), "window_runeMain");
        m_typeNames.Add(typeof(Window_RuneStart).GetHashCode(), "window_runeStart");
        m_typeNames.Add(typeof(Window_SelectRole).GetHashCode(), "window_selectRole");
        m_typeNames.Add(typeof(Window_Settings).GetHashCode(), "window_settings");
        m_typeNames.Add(typeof(Window_Settlement).GetHashCode(), "window_settlement");
        m_typeNames.Add(typeof(Window_Sex).GetHashCode(), "window_sex");
        m_typeNames.Add(typeof(Window_Shizhuangdian).GetHashCode(), "window_shizhuangdian");
        m_typeNames.Add(typeof(Window_Skill).GetHashCode(), "window_skill");
        m_typeNames.Add(typeof(Window_Soul).GetHashCode(), "window_soul");
        m_typeNames.Add(typeof(Window_Sprite).GetHashCode(), "window_sprite");
        m_typeNames.Add(typeof(Window_Strength).GetHashCode(), "window_strength");
        m_typeNames.Add(typeof(Window_Sublimation).GetHashCode(), "window_sublimation");
        m_typeNames.Add(typeof(Window_Summon).GetHashCode(), "window_summon");
        m_typeNames.Add(typeof(Window_System).GetHashCode(), "window_system");
        m_typeNames.Add(typeof(Window_TeamMatch).GetHashCode(), "window_teamMatch");
        m_typeNames.Add(typeof(Window_Train).GetHashCode(), "window_train");
        m_typeNames.Add(typeof(Window_UltimateMask).GetHashCode(), "window_ultimateMask");
        m_typeNames.Add(typeof(Window_Union).GetHashCode(), "window_union");
        m_typeNames.Add(typeof(Window_Unionboss).GetHashCode(), "window_unionboss");
        m_typeNames.Add(typeof(Window_Unionreward).GetHashCode(), "window_unionreward");
        m_typeNames.Add(typeof(Window_Unionsign).GetHashCode(), "window_unionsign");
        m_typeNames.Add(typeof(Window_Upload).GetHashCode(), "window_upload");
        m_typeNames.Add(typeof(Window_Welfare).GetHashCode(), "window_welfare");
        m_typeNames.Add(typeof(Window_Wish).GetHashCode(), "window_wish");
        m_typeNames.Add(typeof(Window_FactionBattle).GetHashCode(), "window_factionBattle");
        m_typeNames.Add(typeof(Window_FactionSettlement).GetHashCode(), "window_factionSettlement");
        m_typeNames.Add(typeof(Window_FactionSign).GetHashCode(), "window_factionSign");
        m_typeNames.Add(typeof(Window_FactionStart).GetHashCode(), "window_factionStart");
        m_typeNames.Add(typeof(Window_DatingDialogueReview).GetHashCode(), "window_datingDialogueReview");
        m_typeNames.Add(typeof(Window_Datingeffect).GetHashCode(), "window_datingeffect");
        m_typeNames.Add(typeof(Window_DatingGift).GetHashCode(), "window_datingGift");
        m_typeNames.Add(typeof(Window_DatingRestaurant).GetHashCode(), "window_datingRestaurant");
        m_typeNames.Add(typeof(Window_DatingSceneDivinationHouse).GetHashCode(), "window_datingSceneDivinationHouse");
        m_typeNames.Add(typeof(Window_NPCDating).GetHashCode(), "window_npcDating");
        m_typeNames.Add(typeof(Window_NPCDatingSettlement).GetHashCode(), "window_npcDatingSettlement");
        m_typeNames.Add(typeof(Level).GetHashCode(), "level");
        m_typeNames.Add(typeof(Level_3DClick).GetHashCode(), "level_3dClick");
        m_typeNames.Add(typeof(Level_Battle).GetHashCode(), "level_battle");
        m_typeNames.Add(typeof(Level_Bordlands).GetHashCode(), "level_bordlands");
        m_typeNames.Add(typeof(Level_FactionPVP).GetHashCode(), "level_factionpvp");
        m_typeNames.Add(typeof(Level_Home).GetHashCode(), "level_home");
        m_typeNames.Add(typeof(Level_Labyrinth).GetHashCode(), "level_labyrinth");
        m_typeNames.Add(typeof(Level_Login).GetHashCode(), "level_login");
        m_typeNames.Add(typeof(Level_NpcDating).GetHashCode(), "level_npcDating");
        m_typeNames.Add(typeof(Level_PVE).GetHashCode(), "level_pve");
        m_typeNames.Add(typeof(Level_PveTeam).GetHashCode(), "level_pveTeam");
        m_typeNames.Add(typeof(Level_PveUnionBoss).GetHashCode(), "level_pveUnionBoss");
        m_typeNames.Add(typeof(Level_PVP).GetHashCode(), "level_pvp");
        m_typeNames.Add(typeof(Level_role).GetHashCode(), "level_role");
        m_typeNames.Add(typeof(Level_Sneak).GetHashCode(), "level_sneak");
        m_typeNames.Add(typeof(Level_Test).GetHashCode(), "level_test");
        m_typeNames.Add(typeof(Level_Train).GetHashCode(), "level_train");
        m_typeNames.Add(typeof(Session).GetHashCode(), "session");
        m_typeNames.Add(typeof(Module_Active).GetHashCode(), "module_active");
        m_typeNames.Add(typeof(Module_AI).GetHashCode(), "module_ai");
        m_typeNames.Add(typeof(Module_Announcement).GetHashCode(), "module_announcement");
        m_typeNames.Add(typeof(Module_AnswerOption).GetHashCode(), "module_answerOption");
        m_typeNames.Add(typeof(Module_Assist).GetHashCode(), "module_assist");
        m_typeNames.Add(typeof(Module_Attribute).GetHashCode(), "module_attribute");
        m_typeNames.Add(typeof(Module_Avatar).GetHashCode(), "module_avatar");
        m_typeNames.Add(typeof(Module_Awake).GetHashCode(), "module_awake");
        m_typeNames.Add(typeof(Module_AwakeMatch).GetHashCode(), "module_awakeMatch");
        m_typeNames.Add(typeof(Module_Battle).GetHashCode(), "module_battle");
        m_typeNames.Add(typeof(Module_Bordlands).GetHashCode(), "module_bordlands");
        m_typeNames.Add(typeof(Module_Cangku).GetHashCode(), "module_cangku");
        m_typeNames.Add(typeof(Module_Charge).GetHashCode(), "module_charge");
        m_typeNames.Add(typeof(Module_Chase).GetHashCode(), "module_chase");
        m_typeNames.Add(typeof(Module_Chat).GetHashCode(), "module_chat");
        m_typeNames.Add(typeof(Module_Collection).GetHashCode(), "module_collection");
        m_typeNames.Add(typeof(Module_DatingGift).GetHashCode(), "module_datingGift");
        m_typeNames.Add(typeof(Module_Equip).GetHashCode(), "module_equip");
        m_typeNames.Add(typeof(Module_FactionBattle).GetHashCode(), "module_factionBattle");
        m_typeNames.Add(typeof(Module_Forging).GetHashCode(), "module_forging");
        m_typeNames.Add(typeof(Module_Friend).GetHashCode(), "module_friend");
        m_typeNames.Add(typeof(Module_Furnace).GetHashCode(), "module_furnace");
        m_typeNames.Add(typeof(Module_GameGuard).GetHashCode(), "module_gameGuard");
        m_typeNames.Add(typeof(Module_Gift).GetHashCode(), "module_gift");
        m_typeNames.Add(typeof(Module_GiftDating).GetHashCode(), "module_giftDating");
        m_typeNames.Add(typeof(Module_Global).GetHashCode(), "module_global");
        m_typeNames.Add(typeof(Module_Gm).GetHashCode(), "module_gm");
        m_typeNames.Add(typeof(Module_Guide).GetHashCode(), "module_guide");
        m_typeNames.Add(typeof(Module_Home).GetHashCode(), "module_home");
        m_typeNames.Add(typeof(Module_Labyrinth).GetHashCode(), "module_labyrinth");
        m_typeNames.Add(typeof(Module_Loading).GetHashCode(), "module_loading");
        m_typeNames.Add(typeof(Module_Login).GetHashCode(), "module_login");
        m_typeNames.Add(typeof(Module_Mailbox).GetHashCode(), "module_mailbox");
        m_typeNames.Add(typeof(Module_Match).GetHashCode(), "module_match");
        m_typeNames.Add(typeof(Module_Notice).GetHashCode(), "module_notice");
        m_typeNames.Add(typeof(Module_Npc).GetHashCode(), "module_npc");
        m_typeNames.Add(typeof(Module_NPCDating).GetHashCode(), "module_npcDating");
        m_typeNames.Add(typeof(Module_NPCDatingSettlement).GetHashCode(), "module_npcDatingSettlement");
        m_typeNames.Add(typeof(Module_NpcGaiden).GetHashCode(), "module_npcGaiden");
        m_typeNames.Add(typeof(Module_Pet).GetHashCode(), "module_pet");
        m_typeNames.Add(typeof(Module_Player).GetHashCode(), "module_player");
        m_typeNames.Add(typeof(Module_PVE).GetHashCode(), "module_pve");
        m_typeNames.Add(typeof(Module_PVEEvent).GetHashCode(), "module_pveEvent");
        m_typeNames.Add(typeof(Module_PVP).GetHashCode(), "module_pvp");
        m_typeNames.Add(typeof(Module_Rune).GetHashCode(), "module_rune");
        m_typeNames.Add(typeof(Module_SelectRole).GetHashCode(), "module_selectRole");
        m_typeNames.Add(typeof(Module_Set).GetHashCode(), "module_set");
        m_typeNames.Add(typeof(Module_Shop).GetHashCode(), "module_shop");
        m_typeNames.Add(typeof(Module_Skill).GetHashCode(), "module_skill");
        m_typeNames.Add(typeof(Module_Story).GetHashCode(), "module_story");
        m_typeNames.Add(typeof(Module_Task).GetHashCode(), "module_task");
        m_typeNames.Add(typeof(Module_Team).GetHashCode(), "module_team");
        m_typeNames.Add(typeof(Module_Union).GetHashCode(), "module_union");
        m_typeNames.Add(typeof(Module_Welfare).GetHashCode(), "module_welfare");
        m_typeNames.Add(typeof(Module_Wish).GetHashCode(), "module_wish");
    }
}